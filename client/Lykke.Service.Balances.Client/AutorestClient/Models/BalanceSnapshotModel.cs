// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.Balances.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BalanceSnapshotModel
    {
        /// <summary>
        /// Initializes a new instance of the BalanceSnapshotModel class.
        /// </summary>
        public BalanceSnapshotModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BalanceSnapshotModel class.
        /// </summary>
        public BalanceSnapshotModel(double balance, double reserved, System.DateTime timestamp, string walletId = default(string), string assetId = default(string))
        {
            WalletId = walletId;
            AssetId = assetId;
            Balance = balance;
            Reserved = reserved;
            Timestamp = timestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WalletId")]
        public string WalletId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetId")]
        public string AssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Balance")]
        public double Balance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Reserved")]
        public double Reserved { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Timestamp")]
        public System.DateTime Timestamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
